# name: build dockerfile
# on:
#   push:
#     branches:
#       - main
# jobs:
#   push:
#     name: "yolks:build_${{ matrix.tag }}"
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     strategy:
#       fail-fast: false
#       matrix:
#         tag:
#           - 5
#     steps:
#       - uses: actions/checkout@v4
#       # Setup QEMU for ARM64 Build
#       - uses: docker/setup-qemu-action@v3
#       - uses: docker/setup-buildx-action@v3
#         with:
#           buildkitd-flags: --debug
#       - uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#           logout: false
#       - uses: docker/build-push-action@v5
#         with:
#           context: ./
#           file: ./Dockerfile
#           platforms: linux/amd64
#           push: true
#           tags: |
#             ghcr.io/carsonlenze/yolks:build_${{ matrix.tag }}


name: Build and Push to GHCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: "yolks:build_${{ matrix.tag }}"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: actions/setup-docker@v2
      with:
        dockerfile: Dockerfile
        context: .

    # - name: Build the Docker image
    #   run: docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest .

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push the Docker image to GHCR
      run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:build_${{ matrix.tag }}